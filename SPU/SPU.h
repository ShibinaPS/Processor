#ifndef SPU_H
#define SPU_H
//=========================================================================================================

#include "../Stack/Debug.h"
#include "../Stack/Stack.h"

#include <math.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

//=========================================================================================================

#define GETARG(arg) ((int)arg & 0xFFFF)

//=========================================================================================================

const int MAX_TEXT_LEN = 32;
const int REG_NUM      = 4;
const int RAM_SIZE     = 32;
const int REG_CODE     = 20;


//=========================================================================================================

struct SPU
{
      Stack* stack = {};
      FILE* bin_file = nullptr;

      int error     = 0;
      int signature = 0;
      int quantity  = 0;
      size_t cur_n  = 0;

      elem_t* code_buffer  = nullptr;
      elem_t Reg[REG_NUM]  = {0};
      elem_t Ram[RAM_SIZE] = {0};
};

//=========================================================================================================

enum SPU_errors
{
      ERROR_STK_CREATION            = 1,
      ERROR_BIN_FILE_NULLPTR        = 2,
      ERROR_FILE_BUFFER_NULLPTR     = 3,
      ERROR_FILE_READING            = 4,
      ERROR_BIN_FILE_OPEN           = 5,
      ERROR_CODE_BUFFER_NULLPTR     = 6,
      ERROR_DIV_BY_ZERO             = 7,
      ERROR_NEG_NUMBER              = 8,
};

//=========================================================================================================

enum SPU_code
{
      // CMD
      HLT   = 0,
      IN    = 1,
      OUT   = 2,
      PUSH  = 3,
      POP   = 4,
      ADD   = 5,
      SUB   = 6,
      MUL   = 7,
      DIV   = 8,
      SQRT  = 9,
      MINUS = 10,

      // REG
      AX = 20,
      BX = 21,
      CX = 22,
      DX = 23,

      // JMP
      JMP   = 30,
      JE    = 31,
      JGE   = 32,
      JNE   = 33,
      JG    = 34,
      JL    = 35,
      JLE   = 36,
      CALL  = 37,
      FLAGS = 38,
};

//=========================================================================================================

enum CodeMask
{
      REG_MASK = 1 << 16,
      NUM_MASK = 1 << 17,
      RAM_MASK = 1 << 18,
};

//===========================================================================================================

enum AsmCodeTypes
{
      CMD  = 1,
      REG  = 2,
      NUM  = 3,
      JUMP = 4,
      FLAG = 5,
};

//===========================================================================================================

const double EPS = 1e-6;

enum Comparison
{
    EQUAL   = 0,
    FIRST   = 1,
    SECOND  = 2,
};

//===========================================================================================================

int SPU_ctor(struct SPU* spu, const char* spu_filename);

//===========================================================================================================

FILE* create_filename(struct SPU* spu, const char* cpu_filename);

//=========================================================================================================

int file_reading(struct SPU* spu);

//=========================================================================================================

int processor(struct SPU* spu, struct Stack* stk);

//=========================================================================================================

void arg_check(struct SPU* spu, elem_t** arg);

//=========================================================================================================

void label_check(struct SPU* spu, elem_t** arg);

//=========================================================================================================

int Compare(const double x, const double y);

//=========================================================================================================

#endif // SPU_H